diff --git a/core/lib/Drupal/Core/Menu/MenuParentFormSelector.php b/core/lib/Drupal/Core/Menu/MenuParentFormSelector.php
index bf8ca0f140..898ae05294 100644
--- a/core/lib/Drupal/Core/Menu/MenuParentFormSelector.php
+++ b/core/lib/Drupal/Core/Menu/MenuParentFormSelector.php
@@ -7,6 +7,7 @@
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\StringTranslation\TranslationInterface;
+use Drupal\node\NodeInterface;
 
 /**
  * Default implementation of the menu parent form selector service.
@@ -164,6 +165,15 @@ protected function parentSelectOptionsTreeWalk(array $tree, $menu_name, $indent,
         if (!$link->isEnabled()) {
           $title .= ' (' . $this->t('disabled') . ')';
         }
+        $params = $link->getRouteParameters();
+        if (!empty($params['node']) && $link->getRouteName() === 'entity.node.canonical') {
+          $node = $this->entityTypeManager->getStorage('node')->load($params['node']);
+          if ($node instanceof NodeInterface) {
+            if (!$node->isPublished()) {
+              $title .= ' (' . $this->t('unpublished') . ')';
+            }
+          }
+        }
         $options[$menu_name . ':' . $link->getPluginId()] = $title;
         if (!empty($element->subtree)) {
           $this->parentSelectOptionsTreeWalk($element->subtree, $menu_name, $indent . '--', $options, $exclude, $depth_limit, $cacheability);
diff --git a/core/modules/menu_ui/src/MenuForm.php b/core/modules/menu_ui/src/MenuForm.php
index 599eb93c74..61ca287b2f 100644
--- a/core/modules/menu_ui/src/MenuForm.php
+++ b/core/modules/menu_ui/src/MenuForm.php
@@ -17,6 +17,7 @@
 use Drupal\Core\Utility\LinkGeneratorInterface;
 use Drupal\menu_link_content\MenuLinkContentStorageInterface;
 use Drupal\menu_link_content\Plugin\Menu\MenuLinkContent;
+use Drupal\node\NodeInterface;
 use Drupal\system\MenuStorage;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
@@ -412,6 +413,21 @@ protected function buildOverviewTreeForm($tree, $delta) {
           $form[$id]['title']['#suffix'] = ' (' . $this->t('logged in users only') . ')';
         }
 
+        $params = $link->getRouteParameters();
+        if (!empty($params['node']) && $link->getRouteName() === 'entity.node.canonical') {
+          $node = $this->entityTypeManager->getStorage('node')->load($params['node']);
+          if ($node instanceof NodeInterface) {
+            if (!$node->isPublished()) {
+              if (isset($form[$id]['title']['#suffix'])) {
+                $form[$id]['title']['#suffix'] .= ' (' . $this->t('unpublished') . ')';
+              }
+              else {
+                $form[$id]['title']['#suffix'] = ' (' . $this->t('unpublished') . ')';
+              }
+            }
+          }
+        }
+
         $form[$id]['enabled'] = [
           '#type' => 'checkbox',
           '#title' => $this->t('Enable @title menu link', ['@title' => $link->getTitle()]),
